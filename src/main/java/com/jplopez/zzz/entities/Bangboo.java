package com.jplopez.zzz.entities;

import org.springframework.hateoas.RepresentationModel;

import com.jplopez.zzz.entities.converter.RarityConverter;
import com.jplopez.zzz.entities.enums.Rarity;

import jakarta.persistence.Column;
import jakarta.persistence.Convert;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

/**
 * Bangboo Entity.
 * 
 * Bangboos are companion entities that provide assistance and special abilities to agents.
 * They are collectible creatures with different rarities and faction affiliations.
 * 
 * Entities are mapped to tables (or equivalent) to transport the data received in REST controllers
 * to the persistence layer (repositories). Similarly, Entities take the results from querying DBs
 * to the REST controllers who parse them to JSON and response to clients.
 * 
 * @since 1.0
 */
@Data
@NoArgsConstructor
@EqualsAndHashCode(callSuper = false)
@Entity
public class Bangboo extends RepresentationModel<Bangboo>
 {

  /**
   * Primary key identifier for the Bangboo entity.
   * Auto-generated by the database.
   */
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  @EqualsAndHashCode.Exclude
  private String id;

  /**
   * Unique business identifier for the Bangboo.
   * This is used for external references and should be unique across all bangboos.
   */
  @Column(nullable = false, unique = true)
  private String bangbooId;

  /**
   * Display name of the Bangboo.
   * Must be unique and cannot be null.
   */
  @Column(nullable = false, unique = true)
  private String name;

  /**
   * Rarity classification of the Bangboo (A, B, S).
   * Nullable field - some bangboos may not have an assigned rarity.
   */
  @Column(nullable = true)
  @Convert(converter = RarityConverter.class)
  private Rarity rarity;

  /**
   * Faction affiliation of the Bangboo.
   * Nullable field - some bangboos may be independent or unaffiliated.
   */
  @Column(nullable = true)
  private String faction;

  /**
   * Manual getter for ID to ensure it's available for HATEOAS link generation.
   * Required due to Lombok and RepresentationModel integration issues.
   * 
   * @return the primary key identifier
   */
  public String getId() {
    return id;
  }

  /**
   * Manual setter for ID to ensure proper entity initialization.
   * 
   * @param id the primary key identifier to set
   */
  public void setId(String id) {
    this.id = id;
  }

}
